name: Deploy Vue App to VPS

# This workflow will run every time a push is made to the 'main' branch
on:
  push:
    branches:
      - main # <-- Change this to your main branch if it's different (e.g., master, develop)

jobs:
  build:
    runs-on: ubuntu-latest # Run the job on a Linux virtual machine (Ubuntu)
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Clones your repository

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Sets up Buildx for building Docker images

      - name: Log in to Docker Hub
        # Authenticates with Docker Hub using GitHub secrets
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: . # The context for building the image (the root of your repo)
          file: ./Dockerfile # Path to your Dockerfile
          push: true # Upload the image to Docker Hub
          # Define the image tag: your_dockerhub_user/app_name:latest
          tags: ${{ secrets.DOCKER_USERNAME }}/saguaro-front-vue:latest

  deploy:
    needs: build # This job depends on the 'build' job completing successfully
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VPS to known_hosts
        
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.VPS_USER }}/workspace/test-deploy
            git pull origin main
            
            # Stop and remove old containers
            docker-compose down || true

            # Pull the latest Docker image from the registry
            docker pull ${{ secrets.DOCKER_USERNAME }}/saguaro-front-vue:latest

            # Start new containers in detached mode
            docker-compose up -d

            # Optional: clean up old images to free up space
            docker image prune -f